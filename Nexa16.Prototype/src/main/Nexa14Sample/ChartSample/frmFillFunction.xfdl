<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="frmFillFunction" classname="frmFillFunction" left="0" top="0" width="1024" height="768" titletext="Fill Function" onload="frmFillFunction_onload" onbeforeclose="frmFillFunction_onbeforeclose">
    <Layouts>
      <Layout>
        <WebBrowser id="chart1" left="1.86%" top="2.47%" width="95.8%" height="95.44%" taborder="0"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.0"><![CDATA[//include "LIB::rMateChartH5.xjs";
//include "LIB::rMateChartH5License.xjs";

/*
 * rMate Chart for HTML5 nexacro 샘플 소스
 *
 * rMateChartH5 version : 3.0
 * nexacro version : 14
 *
 * nexacro과 rMateChart for HTML5 간에 데이타를 주고 받는 모듈을 포함하여
 * rMateChartH5의 기능을 구현한 예제입니다.
 * 
 * rMateChart for HTML5 는 HTML5 표준과 자바스크립트로 구현된 차트 제품으로
 * nexacro의 Runtime 모드에서는 Plugin 상태에서 실행되고
 * HTML5 모드에서는 브라우져의 iframe내에서 실행되게 됩니다.
 * 이를 위해 차트 개발시 nexacro의 WebBrowser 컴포넌트(onusernotify가 지원되는 버젼)로 작성되어야 하며
 * rMateChartH5 Kit for nexacro을 통해 Runtime과 HTML5를 동시에 지원할 수 있게 됩니다.
 * 이때 WebBrowser 컴포넌트내에 넣어질 html을 필요하게 되며 이에 대한 예제는 Kit에서
 * nexacroChartH5Sample.html로 제공되고 있습니다.
 * 
 * Runtime모드로 실행될 때는 아래의 함수를 사용하는 기능은 nexacro과의 연동이 안되어
 * html내어서 별도의 동명의 자바스크립트 함수로 구현되어야 하며, 이때 함수내에서
 * nexacro내의 기능과 연동하여 사용할 수는 없습니다. (HTML5모드에서는 가능)
 *    labelJsFunction
 *    dataTipJsFunction
 *    fillJsFunction
 *    insideLabelJsFunction
 *    outsideLabelJsFunction
 *    totalLabelJsFunction
 *    tickLabelJsFunction
 *    innerTipJsFunction
 *    targetTipJsFunction
 *    seriesLabelFunc
 * 
 * - 주의사항
 *  HTML5 모드로 실행하는 경우 nexacroChartH5Sample.html은 iframe내에서 실행되므로 동일한 서버에서 불려져야
 *  브라우져의 보안정책에 위배되지 않게 됩니다. 다른 서버에서 불려질 경우 제대로 작동하지 문제가 발생하니
 *  유의하시기 바랍니다.
 */

/*
 * 차트에서 레이아웃에 fillJsFunction 기능에 의거하여 함수에서 차트내 아이템의 색상을 지정하는 예제입니다.
 * 레이아웃에서 fillJsFunction에 불려질 함수명을 넣어주고
 * 해당 함수에서 표시할 색상을 만들어 반환하게 됩니다.
 */


this.makeChartVars = function() {
	var chartVars = "";

	//rMateChartH5가 로딩 완료 되었을 때 호출 할 함수를 정의 하십시오.
	var rMateOnLoadCallFunction = "rMateChartOnLoad";
	chartVars += "rMateOnLoadCallFunction="+rMateOnLoadCallFunction;

	return chartVars;
}

// chartVars에 rMateOnLoadCallFunction 으로 아래 함수를 설정하여 rMateChartH5가 로딩된후 불려지게 할 수 있습니다.
this.rMateChartOnLoad = function(id) {
	this.rMateChartSetLayout(this.chart1, layoutStr);
	this.rMateChartSetData(this.chart1, dataStr);
}

this.frmFillFunction_onload = function(obj:Form, e:nexacro.LoadEventInfo) {
	//var htmlUrl = "http://172.10.13.73:8080/NEXA/rMateChartH5/Samples/nexacroChartH5Sample.html";		// 차트를 그릴 html의 url
	//var scriptRootUrl = "http://172.10.13.73:8080/NEXA/rMateChartH5";			// rMateChartH5의 assets과 js가 저장된 url (이 디렉토리의 아래에 JS/ 와 Assets/ 디렉토리가 있어야 함)

	// Form이 완선된 후 차트를 생성합니다.
	this.rMateChartCreate(this.chart1, this.scriptRootUrl, this.htmlUrl, this.makeChartVars());
}

this.frmFillFunction_onbeforeclose = function(obj:Form, e:nexacro.CloseEventInfo) {
	this.rMateChartClear(this.chart1);
}


var layoutStr = '\
<rMateChart cornerRadius="12" borderStyle="solid">\
	<Options><Caption text="Annual Report"/></Options>\
	<Line2DChart showDataTips="true">\
		<horizontalAxis><CategoryAxis categoryField="Month"/></horizontalAxis>\
		<series>\
			/* \
				fillJsFunction : Line2DSeries에서 아이템 색상 지정용 Javascript함수로 \
					실행시 html파일 또는 Form내에 정의한 해당 함수로 데이터와 함께 불려집니다\
					이 예제에서는 전달받은 values 값에 따라 다른 색상을 반환하도록 구현되었읍니다\
					** HTML5모드만을 사용할 경우 fillJsFunc를 window.NEXACROWEBBROWSER.parent.fillJsFunc 로 주시면 이 Form의 fillJsFunc가 실행됩니다. \
			*/ \
			<Line2DSeries yField="Profit" displayName="Profit" itemRenderer="CircleItemRenderer" radius="5" fillJsFunction="fillJsFunc">\
				<showDataEffect><SeriesInterpolate/></showDataEffect>\
				<lineStroke><Stroke color="0x339966" weight="2"/></lineStroke>\
				<stroke><Stroke color="0x339966" weight="2"/></stroke>\
			</Line2DSeries>\
		</series>\
	</Line2DChart>\
</rMateChart>\
';

var dataStr = "<items>\
	<item>\
		<Month>Jan</Month>\
		<Profit>900</Profit>\
	</item>\
	<item>\
		<Month>Feb</Month>\
		<Profit>1400</Profit>\
	</item>\
	<item>\
		<Month>Mar</Month>\
		<Profit>1500</Profit>\
	</item>\
	<item>\
		<Month>Apr</Month>\
		<Profit>1900</Profit>\
	</item>\
	<item>\
		<Month>May</Month>\
		<Profit>1400</Profit>\
	</item>\
	<item>\
		<Month>Jun</Month>\
		<Profit>2000</Profit>\
	</item>\
	<item>\
		<Month>Jul</Month>\
		<Profit>1800</Profit>\
	</item>\
	<item>\
		<Month>Aug</Month>\
		<Profit>2500</Profit>\
	</item>\
	<item>\
		<Month>Sep</Month>\
		<Profit>3000</Profit>\
	</item>\
	<item>\
		<Month>Oct</Month>\
		<Profit>2000</Profit>\
	</item>\
	<item>\
		<Month>Nov</Month>\
		<Profit>2100</Profit>\
	</item>\
	<item>\
		<Month>Dec</Month>\
		<Profit>1700</Profit>\
	</item>\
</items>";


///////////////// 아래의 예제 함수들은 rMateChartH5와 연동하여 불려지는 함수들이며 위에 정의한 htmlUrl 의 html 내에도 정의되어야 합니다. - 함수의 사용에 관련된 자세한 내용은 rMateChart for HTML5를 참조하시기 바랍니다.  //////////////////////


/*
// -------------------- 채우기 색 사용자 정의 함수 ----------------------------------------------------------------
// 차트의 채우기 색을 특정 조건에 따라 지정하는 사용자 정의 함수입니다.
// layout XML 에서 Series 속성을 넣을 때 fillJsFunction 을 주고, 만든 javascript 함수명을 넣어줍니다.
//
// 예) <Pie2DSeries field="Profit" fillJsFunction="fillJsFunc">
//
// 파라메터 설명
// seriesId : 해당 아이템의 아이디.
// index : 해당 아이템의 인덱스.
// data : 해당 item의 값을 표현하기 위해 입력된 data(row값에 해당 - data로 입력된 종류에 따라 XML문자열 또는 배열의 Object가 됩니다)
// values : 해당 item의 값 (배열로 전달되며, 차트 종류에 따라 아래와 같이 들어옵니다.)
            Bar2D(3D)Series     0:x축값 1:y축값
            Column2D(3D)Series  0:x축값 1:y축값
            Area2DSeries    0:x축값 1:y축값
            Bubble3DSeries  0:x축값 1:y축값 2:radius값
            Line2DSeries    0:x축값 1:y축값
            HLOCSeries    0:x축값 1:open값 2:low값 3:high값 4:close값
            Pie2D(3D)Series     0:값 1:퍼센트값 2:nameField명

**
// From-To Chart 에서 minField 를 지정했다면 values 의 마지막 인덱스 값에 minField 값이 들어옵니다.
*/
this.fillJsFunc = function(seriesId, index, data, values)
{
	if(values[1] > 2000)
		return "0xFF3366";
	else if(values[1] > 1000)
		return "0xFFFF33";
	else
		return "0xFF9999";	
}
]]></Script>
  </Form>
</FDL>
