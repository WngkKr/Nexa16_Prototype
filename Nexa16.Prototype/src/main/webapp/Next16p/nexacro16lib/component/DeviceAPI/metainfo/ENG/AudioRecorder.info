<?xml version="1.0" encoding="UTF-8"?>
<MetaInfo version="2.0">
  <Object id="nexacro.AudioRecorder">
    <ObjectInfo inheritance="" classname="nexacro.AudioRecorder" shorttypename="" csstypename="AudioRecorder" csscontrolname="" group="Object" subgroup="Object" csspseudo="" container="false" composite="false" tabstop="false" cssstyle="false" contents="false" formats="false" contentseditor="" defaultwidth="false" defaultheight="false" registration="allow" edittype="" generatetype="" useinitvalue="false" popup="false" edittypecomponent="" dblclickevent="" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="Save the file to record the sound of the mobile device." />
    <PropertyInfo>
      <Property name="audiofile" group="Appearance" subgroup="" edittype="String" defaultvalue="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" unitinfo="" delimiter="" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="The audiofile property sets a file name to save audio information recorded in a mobile device." csspropertyname="" csselementname="" normalpropertyname="audiofile" />
      <Property name="audioformat" group="Appearance" subgroup="" edittype="Enum" defaultvalue="MP3" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" unitinfo="" delimiter="" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="The audio format property forms audio data recorded on a mobile device.&#xA;In a format that can be used, there are, WAV OGG, AMR_NB, AMR_WV, MP3." csspropertyname="" csselementname="" normalpropertyname="audioformat" />
      <Property name="channelconfig" group="Appearance" subgroup="" edittype="Enum" defaultvalue="Mono" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" unitinfo="" delimiter="" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="The channelconfig property records audio channels on mobile device." csspropertyname="" csselementname="" normalpropertyname="channelconfig" />
      <Property name="samplerate" group="Appearance" subgroup="" edittype="Number" defaultvalue="8000" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" unitinfo="" delimiter="" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="The samplerate property gives a sample ratio of files to store audio information recorded in mobile device." csspropertyname="" csselementname="" normalpropertyname="samplerate" />
    </PropertyInfo>
    <StyleInfo>
      <PropertyInfo />
      <StatusInfo />
    </StyleInfo>
    <ControlInfo />
    <MethodInfo>
      <Method name="addEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="It adds an event handler function.">
        <Syntax text="AudioRecorder.addEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Integer" description="If successful, it returns the changed index, otherwise, it returns -1." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="Event handler function" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="Target scope" />
            <Argument name="strEventID" type="String" in="true" out="true" option="true" variable="true" description="Event ID" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="addEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="It adds an event handler as a result searched with a designated event ID.">
        <Syntax text="AudioRecorder.addEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Integer" description="If successful, it returns an added index value. Otherwise, it returns -1." />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="target scope" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="Event ID" />
            <Argument name="strFunc" type="String" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="clearEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="It clears all set event handler functions.">
        <Syntax text="AudioRecorder.clearEventHandler( strEventID )">
          <Return type="Integer" description="It returns the number of deleted event handler functions." />
          <Arguments>
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="Event ID" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="findEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="It finds a designated event handler function and returns the index.">
        <Syntax text="AudioRecorder.findEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Integer" description="Index of a designated function" />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="Event handler function object to find" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="Target scope" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="Event ID" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="getEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="" description="It is a method to return the specified event handler function.">
        <Syntax text="AudioRecorder.getEventHandler( strEventID, nIdx )">
          <Return type="Object" description="It returns the object of the event handler function. If the specified index location is not valid, it returns &quot;null.&quot;" />
          <Arguments>
            <Argument name="nIdx" type="Integer" in="false" out="false" option="false" variable="false" description="Index of the event handler function (Zero-based index)" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="Event ID" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="pause" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="The pause method releases a pause of regeneration of audio files in mobile device.">
        <Syntax text="AudioRecord.pause()">
          <Return type="" description="" />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="recordingStart" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="The recordingstart method starts recording an audio file on a mobile device.">
        <Syntax text="AudioRecord.recordingStart( [nIntervalTime] )">
          <Return type="Boolean" description="If a number or letter which is not available to be used is input as nIntervalTime, it returns false. Otherwise, it returns true." />
          <Arguments>
            <Argument name="nIntervalTime" type="Number" in="false" out="false" option="false" variable="false" description="onrecording event occurrence interval (200ms ~ 86400000ms)&#xA;No onrecording event when the value of nIntervalTime is omitted or less than 200ms" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="recordingStop" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="The recordingStop method stops recording audio files in mobile device.">
        <Syntax text="AudioRecord.recordingStop()">
          <Return type="" description="" />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="removeEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="It removes a designated index or an event handler function.">
        <Syntax text="AudioRecorder.removeEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Integer" description="It returns the number of removed event handler functions(if successful, 1. if fails, 0)" />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="event handler function item to remove" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="target scope" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="event ID" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="removeEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="It removes an event handler lookup with a designated event ID.">
        <Syntax text="AudioRecorder.removeEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Integer" description="It returns the number of deleted event handler functions. (if is successful, 1. if it fails, 0)" />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="Target scope" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="Event ID" />
            <Argument name="strFunc" type="String" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="resume" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="The resume method releases the pause of regeneration of audio files in mobile device.">
        <Syntax text="AudioRecord.resume()">
          <Return type="" description="" />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="setEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="It changes an event handler function.">
        <Syntax text="AudioRecorder.setEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Integer" description="If it is success, it returns the changed index. Otherwise, it returns -1." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="Event handler function" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="target scope" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="Event ID" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="It sets an event handler lookup with a designated event ID.">
        <Syntax text="AudioRecorder.setEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Integer" description="If successful, it returns the changed index, otherwise, it returns -1." />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="target scope" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="Event ID" />
            <Argument name="strFunc" type="Object" in="false" out="false" option="false" variable="false" description="Event handler function" />
          </Arguments>
        </Syntax>
      </Method>
    </MethodInfo>
    <EventHandlerInfo>
      <EventHandler name="onerror" group="Event" deprecated="false" unused="false" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="The onerror event occurs when recording of audio files is failed in mobile device.">
        <Syntax text="AudioRecorder.onerror(obj:nexacro.AudioRecorder,e:nexacro.AudioErrorEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="AudioErrorEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onrecording" group="Event" deprecated="false" unused="false" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="The onrecording event occurs during recording audio files in mobile device.">
        <Syntax text="AudioRecorder.onrecording(obj:nexacro.AudioRecorder,e:nexacro.AudioEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="AudioEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onstop" group="Event" deprecated="false" unused="false" requirement="Mobile Hybrid (Android),Mobile Hybrid (IOS)" description="The onstop Event occurs when recording of audio files is terminated in mobile device.">
        <Syntax text="AudioRecorder.onstop(obj:nexacro.AudioRecorder,e:nexacro.AudioEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="AudioEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
    </EventHandlerInfo>
    <ContentsInfo />
  </Object>
</MetaInfo>
